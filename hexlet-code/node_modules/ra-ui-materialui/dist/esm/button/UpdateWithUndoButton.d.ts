import { ReactElement } from 'react';
import PropTypes from 'prop-types';
import { RaRecord, UpdateParams } from 'ra-core';
import { UseMutationOptions } from 'react-query';
import { ButtonProps } from './Button';
import { BulkActionProps } from '../types';
export declare const UpdateWithUndoButton: {
    (props: UpdateWithUndoButtonProps): JSX.Element;
    propTypes: {
        label: PropTypes.Requireable<string>;
        resource: PropTypes.Requireable<string>;
        record: PropTypes.Requireable<object>;
        icon: PropTypes.Requireable<PropTypes.ReactElementLike>;
        data: PropTypes.Validator<any>;
    };
};
export interface UpdateWithUndoButtonProps<RecordType extends RaRecord = any, MutationOptionsError = unknown> extends BulkActionProps, ButtonProps {
    icon?: ReactElement;
    data: any;
    mutationOptions?: UseMutationOptions<RecordType, MutationOptionsError, UpdateParams<RecordType>> & {
        meta?: any;
    };
}
//# sourceMappingURL=UpdateWithUndoButton.d.ts.map