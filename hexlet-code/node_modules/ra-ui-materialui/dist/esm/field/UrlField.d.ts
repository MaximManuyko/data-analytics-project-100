import { AnchorHTMLAttributes } from 'react';
import { FieldProps } from './types';
export declare const UrlField: {
    <RecordType extends Record<string, any> = Record<string, any>>(props: UrlFieldProps<RecordType>): JSX.Element;
    propTypes: {
        sortBy: import("prop-types").Requireable<string>;
        sortByOrder: import("prop-types").Requireable<"ASC" | "DESC">;
        source: import("prop-types").Requireable<string>;
        label: import("prop-types").Requireable<NonNullable<string | boolean | import("prop-types").ReactElementLike>>;
        sortable: import("prop-types").Requireable<boolean>;
        className: import("prop-types").Requireable<string>;
        cellClassName: import("prop-types").Requireable<string>;
        headerClassName: import("prop-types").Requireable<string>;
        textAlign: import("prop-types").Requireable<"inherit" | "left" | "right" | "center" | "justify">;
        emptyText: import("prop-types").Requireable<string>;
    };
    displayName: string;
};
export interface UrlFieldProps<RecordType extends Record<string, any> = Record<string, any>> extends FieldProps<RecordType>, AnchorHTMLAttributes<HTMLAnchorElement> {
}
//# sourceMappingURL=UrlField.d.ts.map